@model IEnumerable<CoreLMS.Core.Models.Document>
@*@model IEnumerable<CoreLMS.Core.ViewModels.DocumentList>*@

@{
    ViewData["Title"] = "Documents";
}

<h1>Documents</h1>

@if ((User.IsInRole("Teacher")) || (User.IsInRole("Admin")))
{
    <p>
        <a asp-action="UploadDocument">Upload New Document</a>
    </p>
}
else
{
    <p>
        <a  asp-controller="Students" asp-action="StudentPage">Home Page</a>
    </p>
}
<form asp-action="Filter">
    <div class="input-group mb-3">
        <input type="text" name="documentname" class="form-control" placeholder="Search on title" />
        <div class="input-group-append">
            <button type="submit" class="btn btn-primary"><i class="fa fa-search">&emsp;Search</i></button>
        </div>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.DocumentName), "Index", new { sortOrder = ViewBag.DocumentNameSortParm })
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.UploadTime), "Index", new { sortOrder = ViewBag.UploadTimeSortParm })
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.DocumentPath), "Index", new { sortOrder = ViewBag.DocumentPathSortParm })
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.TypeOfDocument), "Index", new { sortOrder = ViewBag.TypeOfDocumentSortParm })
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.LMSUser), "Index", new { sortOrder = ViewBag.DocumentNameSortParm })
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.Course), "Index", new { sortOrder = ViewBag.CourseSortParm })
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.Module), "Index", new { sortOrder = ViewBag.ModuleSortParm })
            </th>
            <th>
                @Html.ActionLink(Html.DisplayNameFor(model => model.Activity), "Index", new { sortOrder = ViewBag.ActivitySortParm })
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.DocumentName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UploadTime)
                </td>
                <td>
                    <div>
                        <a asp-action="Download" asp-route-id="@item.DocumentId">@Html.DisplayFor(modelItem => item.DocumentPath)</a>
                    </div>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TypeOfDocument)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LMSUser.UserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Course.CourseName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Module.ModuleName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Activity.ActivityName)
                </td>
                <td>
                    @*<a asp-action="Download" asp-route-id="@item.DocumentId">Download</a> |*@
                    <a asp-action="Details" asp-route-id="@item.DocumentId">Details</a>

                    @if ((User.IsInRole("Teacher")) || (User.IsInRole("Admin")))
                    {
                        <div>
                            | <a asp-action="Edit" asp-route-id="@item.DocumentId">Edit</a> |
                            <a asp-action="Delete" asp-route-id="@item.DocumentId">Delete</a>
                        </div>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
